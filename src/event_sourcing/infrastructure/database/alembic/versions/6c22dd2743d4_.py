"""empty message

Revision ID: 6c22dd2743d4
Revises:
Create Date: 2025-08-03 09:47:41.840399

"""

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "6c22dd2743d4"
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "user",
        sa.Column("aggregate_id", sa.UUID(), nullable=False),
        sa.Column("username", sa.String(length=100), nullable=False),
        sa.Column("email", sa.String(length=255), nullable=False),
        sa.Column("first_name", sa.String(length=100), nullable=True),
        sa.Column("last_name", sa.String(length=100), nullable=True),
        sa.Column("password_hash", sa.Text(), nullable=False),
        sa.Column("status", sa.String(length=50), nullable=False),
        sa.Column(
            "created_at_user", sa.DateTime(timezone=True), nullable=False
        ),
        sa.Column(
            "updated_at_user", sa.DateTime(timezone=True), nullable=False
        ),
        sa.Column("deleted_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_user_aggregate_id"), "user", ["aggregate_id"], unique=True
    )
    op.create_index(op.f("ix_user_email"), "user", ["email"], unique=False)
    op.create_index(op.f("ix_user_id"), "user", ["id"], unique=False)
    op.create_index(
        op.f("ix_user_username"), "user", ["username"], unique=False
    )
    op.create_table(
        "user_event_stream",
        sa.Column("event_id", sa.UUID(), nullable=False),
        sa.Column("aggregate_id", sa.UUID(), nullable=False),
        sa.Column(
            "event_type",
            sa.Enum(
                "USER_CREATED",
                "USER_UPDATED",
                "USER_DELETED",
                "USERNAME_CHANGED",
                "PASSWORD_CHANGED",
                "PASSWORD_RESET_REQUESTED",
                "PASSWORD_RESET_COMPLETED",
                "PROJECTION_CREATED",
                "PROJECTION_UPDATED",
                "SNAPSHOT_CREATED",
                "SNAPSHOT_UPDATED",
                "SNAPSHOT_DELETED",
                "SYSTEM_ERROR",
                "SYSTEM_WARNING",
                name="eventtype",
            ),
            nullable=False,
        ),
        sa.Column("timestamp", sa.DateTime(timezone=True), nullable=False),
        sa.Column("version", sa.String(length=50), nullable=False),
        sa.Column(
            "data", postgresql.JSONB(astext_type=sa.Text()), nullable=False
        ),
        sa.Column(
            "event_metadata",
            postgresql.JSONB(astext_type=sa.Text()),
            nullable=True,
        ),
        sa.Column(
            "validation_info",
            postgresql.JSONB(astext_type=sa.Text()),
            nullable=True,
        ),
        sa.Column(
            "source", sa.Enum("API", name="eventsourceenum"), nullable=False
        ),
        sa.Column("processed_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        "idx_user_event_stream_aggregate_events",
        "user_event_stream",
        ["aggregate_id", "timestamp"],
        unique=False,
    )
    op.create_index(
        "idx_user_event_stream_event_type",
        "user_event_stream",
        ["event_type"],
        unique=False,
    )
    op.create_index(
        "idx_user_event_stream_source",
        "user_event_stream",
        ["source"],
        unique=False,
    )
    op.create_index(
        "idx_user_event_stream_timestamp",
        "user_event_stream",
        ["timestamp"],
        unique=False,
    )
    op.create_index(
        op.f("ix_user_event_stream_aggregate_id"),
        "user_event_stream",
        ["aggregate_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_user_event_stream_event_id"),
        "user_event_stream",
        ["event_id"],
        unique=True,
    )
    op.create_index(
        op.f("ix_user_event_stream_event_type"),
        "user_event_stream",
        ["event_type"],
        unique=False,
    )
    op.create_index(
        op.f("ix_user_event_stream_id"),
        "user_event_stream",
        ["id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_user_event_stream_source"),
        "user_event_stream",
        ["source"],
        unique=False,
    )
    op.create_index(
        op.f("ix_user_event_stream_timestamp"),
        "user_event_stream",
        ["timestamp"],
        unique=False,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(
        op.f("ix_user_event_stream_timestamp"), table_name="user_event_stream"
    )
    op.drop_index(
        op.f("ix_user_event_stream_source"), table_name="user_event_stream"
    )
    op.drop_index(
        op.f("ix_user_event_stream_id"), table_name="user_event_stream"
    )
    op.drop_index(
        op.f("ix_user_event_stream_event_type"), table_name="user_event_stream"
    )
    op.drop_index(
        op.f("ix_user_event_stream_event_id"), table_name="user_event_stream"
    )
    op.drop_index(
        op.f("ix_user_event_stream_aggregate_id"),
        table_name="user_event_stream",
    )
    op.drop_index(
        "idx_user_event_stream_timestamp", table_name="user_event_stream"
    )
    op.drop_index(
        "idx_user_event_stream_source", table_name="user_event_stream"
    )
    op.drop_index(
        "idx_user_event_stream_event_type", table_name="user_event_stream"
    )
    op.drop_index(
        "idx_user_event_stream_aggregate_events",
        table_name="user_event_stream",
    )
    op.drop_table("user_event_stream")
    op.drop_index(op.f("ix_user_username"), table_name="user")
    op.drop_index(op.f("ix_user_id"), table_name="user")
    op.drop_index(op.f("ix_user_email"), table_name="user")
    op.drop_index(op.f("ix_user_aggregate_id"), table_name="user")
    op.drop_table("user")
    # ### end Alembic commands ###
